(() => {
	"use strict";

	function o(t) {
		return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
			return typeof o
		} : function(o) {
			return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o
		})(t)
	}! function() {
		function t(n) {
			return (t = "function" == typeof Symbol && "symbol" == o(Symbol.iterator) ? function(t) {
				return o(t)
			} : function(t) {
				return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : o(t)
			})(n)
		}! function() {
			function o(n) {
				return (o = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(o) {
					return t(o)
				} : function(o) {
					return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : t(o)
				})(n)
			}! function() {
				function t(n) {
					return (t = "function" == typeof Symbol && "symbol" == o(Symbol.iterator) ? function(t) {
						return o(t)
					} : function(t) {
						return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : o(t)
					})(n)
				}! function() {
					function o(n) {
						return (o = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(o) {
							return t(o)
						} : function(o) {
							return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : t(o)
						})(n)
					}! function() {
						function t(n) {
							return (t = "function" == typeof Symbol && "symbol" == o(Symbol.iterator) ? function(t) {
								return o(t)
							} : function(t) {
								return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : o(t)
							})(n)
						}! function() {
							function o(n) {
								return (o = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(o) {
									return t(o)
								} : function(o) {
									return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : t(o)
								})(n)
							}! function() {
								function t(n) {
									return (t = "function" == typeof Symbol && "symbol" == o(Symbol.iterator) ? function(t) {
										return o(t)
									} : function(t) {
										return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : o(t)
									})(n)
								}! function() {
									function o(n) {
										return (o = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(o) {
											return t(o)
										} : function(o) {
											return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : t(o)
										})(n)
									}! function() {
										function t(n) {
											return (t = "function" == typeof Symbol && "symbol" == o(Symbol.iterator) ? function(t) {
												return o(t)
											} : function(t) {
												return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : o(t)
											})(n)
										}! function() {
											function o(n) {
												return (o = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(o) {
													return t(o)
												} : function(o) {
													return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : t(o)
												})(n)
											}! function() {
												function t(n) {
													return (t = "function" == typeof Symbol && "symbol" == o(Symbol.iterator) ? function(t) {
														return o(t)
													} : function(t) {
														return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : o(t)
													})(n)
												}! function() {
													function o(n) {
														return (o = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(o) {
															return t(o)
														} : function(o) {
															return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : t(o)
														})(n)
													}! function() {
														function t(n) {
															return (t = "function" == typeof Symbol && "symbol" == o(Symbol.iterator) ? function(t) {
																return o(t)
															} : function(t) {
																return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : o(t)
															})(n)
														}! function() {
															function o(n) {
																return (o = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(o) {
																	return t(o)
																} : function(o) {
																	return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : t(o)
																})(n)
															}! function() {
																function t(n) {
																	return (t = "function" == typeof Symbol && "symbol" == o(Symbol.iterator) ? function(t) {
																		return o(t)
																	} : function(t) {
																		return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : o(t)
																	})(n)
																}! function() {
																	function o(n) {
																		return (o = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(o) {
																			return t(o)
																		} : function(o) {
																			return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : t(o)
																		})(n)
																	}! function() {
																		function t(n) {
																			return (t = "function" == typeof Symbol && "symbol" == o(Symbol.iterator) ? function(t) {
																				return o(t)
																			} : function(t) {
																				return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : o(t)
																			})(n)
																		}! function() {
																			function o(n) {
																				return (o = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(o) {
																					return t(o)
																				} : function(o) {
																					return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : t(o)
																				})(n)
																			}! function() {
																				function t(n) {
																					return (t = "function" == typeof Symbol && "symbol" == o(Symbol.iterator) ? function(t) {
																						return o(t)
																					} : function(t) {
																						return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : o(t)
																					})(n)
																				}! function() {
																					function o(n) {
																						return (o = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(o) {
																							return t(o)
																						} : function(o) {
																							return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : t(o)
																						})(n)
																					}! function() {
																						function t(n) {
																							return (t = "function" == typeof Symbol && "symbol" == o(Symbol.iterator) ? function(t) {
																								return o(t)
																							} : function(t) {
																								return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : o(t)
																							})(n)
																						}! function() {
																							function o(n) {
																								return (o = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(o) {
																									return t(o)
																								} : function(o) {
																									return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : t(o)
																								})(n)
																							}! function() {
																								function t(n) {
																									return (t = "function" == typeof Symbol && "symbol" == o(Symbol.iterator) ? function(t) {
																										return o(t)
																									} : function(t) {
																										return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : o(t)
																									})(n)
																								}! function() {
																									function o(n) {
																										return (o = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(o) {
																											return t(o)
																										} : function(o) {
																											return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : t(o)
																										})(n)
																									}! function() {
																										function t(n) {
																											return (t = "function" == typeof Symbol && "symbol" == o(Symbol.iterator) ? function(t) {
																												return o(t)
																											} : function(t) {
																												return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : o(t)
																											})(n)
																										}! function() {
																											function o(n) {
																												return (o = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(o) {
																													return t(o)
																												} : function(o) {
																													return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : t(o)
																												})(n)
																											}! function() {
																												function t(n) {
																													return (t = "function" == typeof Symbol && "symbol" == o(Symbol.iterator) ? function(t) {
																														return o(t)
																													} : function(t) {
																														return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : o(t)
																													})(n)
																												}! function() {
																													function o(n) {
																														return (o = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(o) {
																															return t(o)
																														} : function(o) {
																															return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : t(o)
																														})(n)
																													}! function() {
																														function t(n) {
																															return (t = "function" == typeof Symbol && "symbol" == o(Symbol.iterator) ? function(t) {
																																return o(t)
																															} : function(t) {
																																return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : o(t)
																															})(n)
																														}! function() {
																															function o(n) {
																																return (o = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(o) {
																																	return t(o)
																																} : function(o) {
																																	return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : t(o)
																																})(n)
																															}! function() {
																																function t(n) {
																																	return (t = "function" == typeof Symbol && "symbol" == o(Symbol.iterator) ? function(t) {
																																		return o(t)
																																	} : function(t) {
																																		return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : o(t)
																																	})(n)
																																}! function() {
																																	function o(n) {
																																		return (o = "function" == typeof Symbol && "symbol" == t(Symbol.iterator) ? function(o) {
																																			return t(o)
																																		} : function(o) {
																																			return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : t(o)
																																		})(n)
																																	}! function() {
																																		function t(n) {
																																			return (t = "function" == typeof Symbol && "symbol" == o(Symbol.iterator) ? function(t) {
																																				return o(t)
																																			} : function(t) {
																																				return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : o(t)
																																			})(n)
																																		}
																																		document.addEventListener("DOMContentLoaded", function() {
																																			! function(o) {
																																				if ("object" === t(o)) {
																																					var n = o.delay,
																																						r = o.slugPrefix,
																																						e = o.slugSuffix,
																																						u = o.msg,
																																						i = document.createElement("div"),
																																						y = document.createElement("a"),
																																						c = Date.now(),
																																						f = 0,
																																						l = 0,
																																						m = 0,
																																						b = window.innerHeight - 108;
 setInterval(function() {
																																						var o = Date.now() - c;
																																						i.classList.remove("mdp-float-slow"), i.classList.remove("mdp-float-inertia"),
																																							/*!catMouseOver &&*/
																																							o - f > 2e3 && o - f < 2999 && (b = o > n + 2021 && Math.abs(l - m) < 500 ? m + window.innerHeight - 2 * i.offsetHeight : m + window.innerHeight > i.offsetTop ? m + window.innerHeight - 1.5 * i.offsetHeight : m + window.innerHeight - 2.5 * i.offsetHeight, i.style.top = "".concat(b, "px"), setTimeout(function() {
																																								i.classList.add("mdp-float-inertia"), i.style.top = "".concat(m + window.innerHeight - 2 * i.offsetHeight, "px")
																																							}, 751), l = m)
																																					}, 2e3), window.addEventListener("scroll", function(o) {
																																						f = o.timeStamp, m = window.scrollY, i.classList.add("mdp-float-slow"), b = m + window.innerHeight - 2 * i.offsetHeight, i.style.top = "".concat(b, "px")
																																					}), i.addEventListener("mouseenter", function() {
																																						i.style.top = "".concat(m + i.getBoundingClientRect().top, "px")
																																					}), i.addEventListener("mouseout", function() {})
																																				}

																																				function p() {
																																					var o = "axial";
																																					return "start" === r && (o = window.location.hostname.split(".")[0]), "end" === r && (o = window.location.pathname.split("/")[window.location.pathname.split("/").length - 1]), o
																																				}
																																			}({
																																				delay: 3500,
																																				slugPrefix: "axial",
																																				slugSuffix: "html",
																																				msg: ""
																																			})
																																		})
																																	}()
																																}()
																															}()
																														}()
																													}()
																												}()
																											}()
																										}()
																									}()
																								}()
																							}()
																						}()
																					}()
																				}()
																			}()
																		}()
																	}()
																}()
															}()
														}()
													}()
												}()
											}()
										}()
									}()
								}()
							}()
						}()
					}()
				}()
			}()
		}()
	}()
})();